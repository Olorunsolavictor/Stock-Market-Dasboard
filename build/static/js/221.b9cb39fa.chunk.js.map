{"version":3,"file":"static/js/221.b9cb39fa.chunk.js","mappings":"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","sources":["assets/notificationIcon.svg","components/home/Header.tsx","components/home/Chart.tsx","components/home/Indices.tsx","screens/dashboard/Dashboard.tsx","screens/dashboard/Home.tsx"],"sourcesContent":["var _path, _g, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgNotificationIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_1694_34971\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 3,\n    y: 1,\n    width: 19,\n    height: 18\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M3.00006 1H21.497V18.348H3.00006V1Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_1694_34971)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.2471 2.5C8.75207 2.5 6.31607 5.238 6.31607 7.695C6.31607 9.774 5.73907 10.735 5.22907 11.583C4.82007 12.264 4.49707 12.802 4.49707 13.971C4.66407 15.857 5.90907 16.848 12.2471 16.848C18.5501 16.848 19.8341 15.813 20.0001 13.906C19.9971 12.802 19.6741 12.264 19.2651 11.583C18.7551 10.735 18.1781 9.774 18.1781 7.695C18.1781 5.238 15.7421 2.5 12.2471 2.5ZM12.2471 18.348C7.57107 18.348 3.34507 18.018 3.00007 14.035C2.99707 12.387 3.50007 11.549 3.94407 10.811C4.39307 10.063 4.81607 9.358 4.81607 7.695C4.81607 4.462 7.80207 1 12.2471 1C16.6921 1 19.6781 4.462 19.6781 7.695C19.6781 9.358 20.1011 10.063 20.5501 10.811C20.9941 11.549 21.4971 12.387 21.4971 13.971C21.1481 18.018 16.9231 18.348 12.2471 18.348Z\",\n    fill: \"#0C0900\"\n  }))), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.1983 22.5001H12.1963C11.0753 22.4991 10.0143 22.0051 9.20927 21.1081C8.93227 20.8011 8.95727 20.3261 9.26527 20.0501C9.57327 19.7721 10.0473 19.7971 10.3243 20.1061C10.8423 20.6831 11.5073 21.0001 12.1973 21.0001H12.1983C12.8913 21.0001 13.5593 20.6831 14.0783 20.1051C14.3563 19.7981 14.8303 19.7731 15.1373 20.0501C15.4453 20.3271 15.4703 20.8021 15.1933 21.1091C14.3853 22.0061 13.3223 22.5001 12.1983 22.5001Z\",\n    fill: \"#0C0900\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNotificationIcon);\nexport default __webpack_public_path__ + \"static/media/notificationIcon.b6d13db035dfcd1ef5200d98a86d7e1c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport avatar from \"../../assets/avatar.jpg\";\r\nimport notificationIcon from \"../../assets/notificationIcon.svg\";\r\nimport { useAuth } from \"configuration/AuthContext\";\r\nimport Warning from \"./Warning\";\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  return (\r\n    <header className=\" py-3 gap-6 w-full flex flex-col justify-between items-center  \">\r\n      <div className=\"w-full   flex justify-between items-center\">\r\n      <div className=\"flex gap-2 justify-start items-center\">\r\n        <div className=\"rounded-[50%] \"><img src={avatar} className=\"rounded-full h-10 w-10\" alt=\"avatar placeholder\" /></div>\r\n        \r\n        <p className=\" text-lg  text-[#1E194E]\">\r\n          Welcome, <span className=\"font-bold\">User</span>\r\n        </p>\r\n      </div>\r\n      <img src={notificationIcon} alt=\"notification icon\" />\r\n      </div>\r\n      \r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\ninterface CandleStickData {\r\n  date: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n}\r\n\r\nconst CandleStickChart: React.FC<{ data: CandleStickData[] }> = ({ data }) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!svgRef.current || data.length === 0) return;\r\n    const svt = d3.select(svgRef.current);\r\n\r\n    // Clear existing contents of the SVG\r\n    svt.selectAll(\"*\").remove();\r\n\r\n    // Define SVG dimensions and margins\r\n    const width = svgRef.current.clientWidth;\r\n    const height = 300;\r\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\r\n    // Define scales for x, y-axis (price), and y-axis (volume)\r\n    const xScale = d3\r\n      .scaleBand()\r\n      .domain(data.map((d) => d.date))\r\n      .range([margin.left, width - margin.right])\r\n      .padding(0.1);\r\n\r\n    const yScalePrice = d3\r\n      .scaleLinear()\r\n      .domain([d3.min(data, (d) => d.low) || 0, d3.max(data, (d) => d.high) || 100])\r\n      .nice()\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    const yScaleVolume = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.volume) || 0])\r\n      .nice()\r\n      .range([height - margin.bottom, height / 2]); // Adjust the range for volume bars\r\n\r\n    // Define candlestick colors\r\n    const color = (d: CandleStickData) => (d.open > d.close ? \"red\" : \"green\");\r\n\r\n    // Create SVG container\r\n    const svg = d3.select(svgRef.current);\r\n    \r\n\r\n    // Draw volume bars\r\n    svg\r\n      .selectAll(\".volume-bar\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"volume-bar\")\r\n      .attr(\"x\", (d) => xScale(d.date)! + xScale.bandwidth() / 2 - 2) // Adjust the positioning\r\n      .attr(\"y\", (d) => yScaleVolume(d.volume))\r\n      .attr(\"width\", 4) // Adjust the width of the volume bars\r\n      .attr(\"height\", (d) => height - margin.bottom - yScaleVolume(d.volume))\r\n      .attr(\"fill\", \"steelblue\");\r\n      \r\n\r\n    // Draw candlesticks\r\n    svg\r\n      .selectAll(\".candlestick\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"candlestick\")\r\n      .attr(\"x\", (d) => xScale(d.date)! + xScale.bandwidth() / 4)\r\n      .attr(\"y\", (d) => Math.min(yScalePrice(d.open), yScalePrice(d.close)))\r\n      .attr(\"width\", xScale.bandwidth() / 2)\r\n      .attr(\"height\", (d) => Math.abs(yScalePrice(d.open) - yScalePrice(d.close)))\r\n      .attr(\"fill\", color)\r\n      .attr(\"rx\", 2) \r\n      .attr(\"ry\", 2);\r\n\r\n    // Draw wicks\r\n    svg\r\n      .selectAll(\".wick\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"class\", \"wick\")\r\n      .attr(\"x1\", (d) => xScale(d.date)! + xScale.bandwidth() / 2)\r\n      .attr(\"y1\", (d) => yScalePrice(d.high))\r\n      .attr(\"x2\", (d) => xScale(d.date)! + xScale.bandwidth() / 2)\r\n      .attr(\"y2\", (d) => yScalePrice(d.low))\r\n      .attr(\"stroke\", color);\r\n\r\n    // Draw x axis\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n      .call(d3.axisBottom(xScale));\r\n\r\n    // Draw y axis for price\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\r\n      .call(d3.axisLeft(yScalePrice));\r\n\r\n    // Draw y axis for volume\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${width - margin.right}, 0)`)\r\n      .call(d3.axisRight(yScaleVolume));\r\n  }, [data]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      className=\"w-full  flex overflow-x-auto justify-center items-center h-auto p-6  shadow-lg rounded-lg\"\r\n      viewBox={`0 0 ${svgRef.current?.clientWidth} 300`}\r\n    ></svg>\r\n  );\r\n};\r\n\r\nexport default CandleStickChart;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useAuth } from \"configuration/AuthContext\";\r\n\r\nconst Indices = () => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const { movingAverage } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (!svgRef.current || movingAverage.length === 0) return;\r\n\r\n    const width = svgRef.current.clientWidth;\r\n    const height = 200;\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 40 };\r\n\r\n    const validMovingAverage:any = movingAverage.filter(\r\n      (value:any) => typeof value === \"number\"\r\n    );\r\n\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, validMovingAverage.length - 1])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 1000| 0])\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    const line = d3\r\n      .line<number>()\r\n      .x((_, i) => xScale(i))\r\n      .y((d) => yScale(d))\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    const svg = d3.select(svgRef.current);\r\n\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .datum(validMovingAverage)\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"steelblue\")\r\n      .attr(\"stroke-width\", 2)\r\n      .attr(\"d\", line);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n      .call(d3.axisBottom(xScale));\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},0)`)\r\n      .call(d3.axisLeft(yScale));\r\n  }, [movingAverage]);\r\n\r\n  return (<div className=\"shadow-lg bg-white rounded-lg p-6\">\r\n    <svg  ref={svgRef} width=\"100%\" height=\"200\"></svg>\r\n  </div>)\r\n};\r\n\r\nexport default Indices;\r\n","\r\nimport Header from \"components/home/Header\";\r\nimport React from \"react\";\r\nimport Chart from \"components/home/Chart\";\r\nimport { useAuth } from \"configuration/AuthContext\";\r\nimport Indices from \"components/home/Indices\";\r\n\r\ninterface DashboardProps {\r\n  handleSetView: (view: number) => void;\r\n}\r\n\r\nconst Dashboard: React.FC<DashboardProps> = ({ handleSetView }) => {\r\n  const {dummyData}=useAuth()\r\n  return (\r\n    <div className=\"rounded bg-white flex flex-col gap-6 md:py-10  md:px-6 border-[#002255] w-full h-auto md:h-screen\">\r\n      <Header />\r\n      <Indices/>\r\n      <Chart  data={dummyData}/>\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\n\r\nconst Home: React.FC = () => {\r\n  const [view, setView] = useState<number>(1);\r\n\r\n  \r\n  const handleSetView = (view: number) => {\r\n    setView(view);\r\n  };\r\n  console.log(view);\r\n  return (\r\n    <div className=\"rounded flex flex-col gap-6 px-4 py-4 md:py-0 md:px-6 border-black w-full bg-white md:h-screen\">\r\n      {view === 1 && <Dashboard handleSetView={handleSetView} />}\r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["Header","_jsx","className","children","_jsxs","src","avatar","alt","notificationIcon","_ref","_svgRef$current","data","svgRef","useRef","useEffect","current","length","d3","selectAll","remove","width","clientWidth","height","margin","xScale","domain","map","d","date","range","padding","yScalePrice","low","high","nice","yScaleVolume","volume","color","open","close","svg","enter","append","attr","bandwidth","Math","min","abs","concat","call","ref","viewBox","Indices","movingAverage","useAuth","validMovingAverage","filter","value","yScale","line","x","_","i","y","curve","datum","handleSetView","dummyData","Chart","Home","view","setView","useState","console","log","Dashboard"],"sourceRoot":""}