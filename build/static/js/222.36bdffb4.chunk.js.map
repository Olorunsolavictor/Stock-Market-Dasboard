{"version":3,"file":"static/js/222.36bdffb4.chunk.js","mappings":"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","sources":["assets/LodaingWhite.svg","components/CwitoButton.tsx","components/Notification.tsx","components/onboarding/OnboardingLeftSide.tsx","assets/pwdVisble.svg","components/CwitoInput.tsx","screens/onboarding/CreateAccount.tsx"],"sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLodaingWhite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50 8.33334V25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50 75V91.6667\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5417 20.5417L32.3334 32.3333\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.6667 67.6667L79.4583 79.4583\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.33334 50H25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75 50H91.6666\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5417 79.4583L32.3334 67.6667\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.6667 32.3333L79.4583 20.5417\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLodaingWhite);\nexport default __webpack_public_path__ + \"static/media/LodaingWhite.a219497850bc5cdf262caaacecc7c9aa.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport loadingSpinner from \"../assets/LodaingWhite.svg\";\r\ninterface CwitoButtonProps {\r\n  title: string;\r\n  color: string;\r\n  onClick: any;\r\n  width: string;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n}\r\nconst CwitoButton: React.FC<CwitoButtonProps> = ({\r\n  title,\r\n  color,\r\n  onClick,\r\n  width,\r\n  disabled,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      // className={`bg-[#023436] text-white px-4 py-2 rounded ${\r\n      //   disabled ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-[#03464E]\"\r\n      // }`}\r\n      className={` ${color}  ${width} ${\r\n        disabled ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-[#002255]/90\"\r\n      }  px-2 py-3 flex justify-center shadow-xl items-center rounded-md text-white text-sm font-semibold text-center  gap-1`}\r\n    >\r\n      {isLoading ? (\r\n        <img\r\n          className=\"suspense-loading-icon\"\r\n          src={loadingSpinner}\r\n          alt=\"loading spinner\"\r\n        />\r\n      ) : (\r\n        title\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CwitoButton;\r\n","import React from \"react\";\r\n// import cancel from \"../assets/cancel.svg\";\r\ninterface NotificationProps {\r\n  message: string;\r\n  color: string;\r\n  textColor: string;\r\n  //   closeIcon: string;\r\n  handleCloseNotification?: () => void;\r\n}\r\n\r\nconst Notification: React.FC<NotificationProps> = ({\r\n  message,\r\n  color,\r\n  textColor,\r\n  //   closeIcon,\r\n  handleCloseNotification,\r\n}) => {\r\n  return (\r\n    <div className=\"fixed flex justify-center items-center z-[100000]  bg-black/50 top-0 bottom-0 left-0 right-0\">\r\n      <div\r\n        className={`${color} gap-10 flex items-center justify-between px-6 py-3 font-nunito text-xs md:text-base ${textColor}    rounded-md `}\r\n      >\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport logo from \"../../assets/logo.png\";\r\n\r\nconst OnboardingLeftSide: React.FC = () => {\r\n  return (\r\n    <div className=\"bg-[#002255] px-[16%] flex flex-col justify-between items-center py-[120px] w-full h-screen\">\r\n      <div className=\"w-full flex justify-start items-center\">\r\n        <img src={logo} height={110} width={110} alt=\"Cwito Logo\" />\r\n      </div>\r\n      <div className=\" w-full flex justify-start items-center\">\r\n        <h1 className=\"text-[56px]  leading-[68px] text-gray-200 text-start font-bold\">\r\n        Your quickest market Checks are clocked here!\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnboardingLeftSide;\r\n","var _path, _path2, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPwdVisble(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 21,\n    height: 20,\n    viewBox: \"0 0 21 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.4999 8.03442C9.39156 8.03442 8.49072 8.93609 8.49072 10.0444C8.49072 11.1519 9.39156 12.0528 10.4999 12.0528C11.6082 12.0528 12.5099 11.1519 12.5099 10.0444C12.5099 8.93609 11.6082 8.03442 10.4999 8.03442ZM10.4999 13.3028C8.70239 13.3028 7.24072 11.8411 7.24072 10.0444C7.24072 8.24692 8.70239 6.78442 10.4999 6.78442C12.2974 6.78442 13.7599 8.24692 13.7599 10.0444C13.7599 11.8411 12.2974 13.3028 10.4999 13.3028Z\",\n    fill: \"#B2B2B2\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_3614_5820\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 2,\n    y: 3,\n    width: 17,\n    height: 14\n  }, _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M2.16699 3.3335H18.8335V16.7543H2.16699V3.3335Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_3614_5820)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M3.47512 10.0438C5.02512 13.4679 7.63595 15.5038 10.5001 15.5046C13.3643 15.5038 15.9751 13.4679 17.5251 10.0438C15.9751 6.62042 13.3643 4.58459 10.5001 4.58375C7.63678 4.58459 5.02512 6.62042 3.47512 10.0438ZM10.5018 16.7546H10.4985H10.4976C7.05095 16.7521 3.95595 14.3363 2.21762 10.2904C2.15012 10.1329 2.15012 9.95459 2.21762 9.79709C3.95595 5.75209 7.05178 3.33625 10.4976 3.33375C10.4993 3.33292 10.4993 3.33292 10.5001 3.33375C10.5018 3.33292 10.5018 3.33292 10.5026 3.33375C13.9493 3.33625 17.0443 5.75209 18.7826 9.79709C18.851 9.95459 18.851 10.1329 18.7826 10.2904C17.0451 14.3363 13.9493 16.7521 10.5026 16.7546H10.5018Z\",\n    fill: \"#B2B2B2\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPwdVisble);\nexport default __webpack_public_path__ + \"static/media/pwdVisble.dc311205b3ac8a451099178c96e60a53.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport pwdVisible from \"../assets/pwdVisble.svg\"\r\n\r\ninterface CwitoInputProps {\r\n  label: string;\r\n  type: string;\r\n  value: any;\r\n  placeholder: string;\r\n  width: string;\r\n  error?: string | null;\r\n  onChange: (value: any) => void;\r\n}\r\n\r\nconst CwitoInput: React.FC<CwitoInputProps> = ({\r\n  label,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  width,\r\n  onChange,\r\n  error,\r\n  ...props\r\n}) => {\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <label\r\n      className={`flex ${width} text-sm flex-col  justify-center items-start gap-1`}\r\n    >\r\n      <p className=\" font-medium\">{label}</p>\r\n      <div className=\"relative w-full\">\r\n        <input\r\n          autoComplete=\"true\"\r\n          className={`w-full border border-[#CCCCCC] rounded-lg p-3 outline-[#CCCCCC]`}\r\n          type={isPasswordVisible ? \"text\" : type} // Toggle between text and password type\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={(e) => onChange(e.target.value)}\r\n        />\r\n        {type === \"password\" && (\r\n          <button\r\n            className=\"absolute inset-y-0 right-0 px-3 focus:outline-none\"\r\n            onClick={togglePasswordVisibility}\r\n          >\r\n            {isPasswordVisible ? \"Hide\" : <img src={pwdVisible}/>} {/* Toggle button text */}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <p className=\"text-red-500 text-[10px] leading-tight text-start\">\r\n        {error}\r\n      </p>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CwitoInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OnboardingLeftSide from \"../../components/onboarding/OnboardingLeftSide\";\r\nimport CwitoInput from \"components/CwitoInput\";\r\nimport CwitoButton from \"components/CwitoButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport arrowBack from \"../../assets/arrowBack.svg\";\r\nimport Notification from \"../../components/Notification\";\r\n\r\nconst CreateAccount: React.FC = () => {\r\n  // const [userIP, setUserIP] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [userEmail, setUserEmail] = useState<string>(\"\");\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [isLoading, setIsloading] = useState<boolean>(false);\r\n  const [successNotification, setSuccessNotification] =\r\n    useState<boolean>(false);\r\n  const [errorNotification, setErrorNotification] = useState<boolean>(false);\r\n  const [emailError, setEmailError] = useState<string | null>(null);\r\n\r\n  const validateEmail = (email: string): boolean => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const closeNotification = () => {\r\n    setSuccessNotification(false);\r\n    setErrorNotification(false);\r\n  };\r\n\r\n  const handleEmailChange = (newValue: string) => {\r\n    setUserEmail(newValue);\r\n    setEmailError(\r\n      validateEmail(newValue) ? null : \"Please enter a valid email address\"\r\n    );\r\n  };\r\n\r\n\r\n  const handleJoinNewsletter = async (userEmail: string) => {};\r\n\r\n  return (\r\n    <div className=\" w-[100vw] h-screen   flex  overflow-auto \">\r\n      {successNotification && (\r\n        <Notification\r\n          message={message}\r\n          color={\"bg-green-400\"}\r\n          textColor={\"text-white\"}\r\n          handleCloseNotification={closeNotification}\r\n        />\r\n      )}\r\n      {errorNotification && (\r\n        <Notification\r\n          message={message}\r\n          color={\"bg-red-400\"}\r\n          textColor={\"text-white\"}\r\n          handleCloseNotification={closeNotification}\r\n        />\r\n      )}\r\n      {/* LEFT SIDE  */}\r\n      <div className=\"hidden  md:block w-[43%]\">\r\n        <OnboardingLeftSide />\r\n      </div>\r\n\r\n      {/* RIGHT SIDE */}\r\n      <section className=\" w-full bg-white   md:w-[60%]  h-[100%]\">\r\n        <div className=\"flex flex-col   justify-start items-start px-5 py-11 md:p-[20%] w-full h-full\">\r\n          <div className=\"w-full bg-white md:w-[480px] h-full md:h-auto gap-6 md:gap-8   flex flex-col justify-start items-center\">\r\n            <header className=\"w-full py-4 flex md:block justify-start items-center gap-2 \">\r\n              <img\r\n                src={arrowBack}\r\n                className=\"block md:hidden\"\r\n                alt=\"arrow back\"\r\n              />\r\n              <h3 className=\"font-bold text-[#002255] text-base sm:text-2xl\">\r\n                Welcome, Join our newsletters\r\n              </h3>\r\n            </header>\r\n\r\n            <CwitoInput\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              value={userEmail}\r\n              width=\"md:w-[335px] w-full\"\r\n              placeholder=\"Please, Enter your email\"\r\n              onChange={handleEmailChange}\r\n              error={emailError}\r\n            />\r\n            <CwitoButton\r\n              onClick={() => navigate(\"/dashboard\")}\r\n              title=\"Join\"\r\n              color=\"bg-[#002255]\"\r\n              width=\"md:w-[335px] w-full\"\r\n              isLoading={isLoading}\r\n              disabled={emailError || !userEmail ? true : false}\r\n            />\r\n            <p className=\"text-center text-[#002255] text-[10px] \">\r\n              By continuing, you agree to our Privacy Policy and Terms & <br />\r\n              Conditions too\r\n            </p>\r\n            <div className=\"flex text-sm mt-[60%] md:mt-6 justify-center gap-6 items-center \">\r\n              {/* <p className=\"text-sm font-medium\">Join Now</p> */}\r\n              <button\r\n                onClick={() => navigate(\"/dashboard\")}\r\n                className=\"py-[6px] px-3 rounded-lg border border-black font-semibold\"\r\n              >\r\n                Cobntinue\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAccount;\r\n"],"names":["_ref","title","color","onClick","width","disabled","isLoading","_jsx","className","concat","children","src","loadingSpinner","alt","message","textColor","handleCloseNotification","OnboardingLeftSide","_jsxs","logo","height","label","type","value","placeholder","onChange","error","props","isPasswordVisible","setIsPasswordVisible","useState","autoComplete","e","target","togglePasswordVisibility","prev","pwdVisible","CreateAccount","navigate","useNavigate","userEmail","setUserEmail","setMessage","setIsloading","successNotification","setSuccessNotification","errorNotification","setErrorNotification","emailError","setEmailError","closeNotification","Notification","arrowBack","CwitoInput","newValue","test","CwitoButton"],"sourceRoot":""}